// <auto-generated />
using System;
using BirdsEye.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BirdsEye.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180808205510_JobsAndInventory")]
    partial class JobsAndInventory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BirdsEye.Domain.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemCatagory");

                    b.Property<string>("ItemCode");

                    b.Property<string>("ItemName");

                    b.Property<int?>("JobId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.HasIndex("UserId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.InventoryNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("InventoryId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("InventoryId");

                    b.ToTable("ItemNote");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.InventoryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("ItemStatus");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.InventoryToInventoryStatus", b =>
                {
                    b.Property<int>("InventoryId");

                    b.Property<int>("ItemStatusId");

                    b.Property<int?>("InventoryStatusId");

                    b.HasKey("InventoryId", "ItemStatusId");

                    b.HasIndex("InventoryStatusId");

                    b.ToTable("InventoryItemStatus");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorId");

                    b.Property<string>("CreatedDate");

                    b.Property<string>("DueDate");

                    b.Property<string>("JobUserId");

                    b.Property<string>("Location");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.JobNotes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<int?>("JobId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("JobId");

                    b.ToTable("WorkNote");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.JobToUser", b =>
                {
                    b.Property<int>("JobId");

                    b.Property<int>("UserId");

                    b.HasKey("JobId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("JobUser");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.Inventory", b =>
                {
                    b.HasOne("BirdsEye.Domain.Models.Job")
                        .WithMany("Inventory")
                        .HasForeignKey("JobId");

                    b.HasOne("BirdsEye.Domain.Models.User", "User")
                        .WithMany("Inventories")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.InventoryNotes", b =>
                {
                    b.HasOne("BirdsEye.Domain.Models.Inventory", "Inventory")
                        .WithMany("InventoryNotes")
                        .HasForeignKey("InventoryId");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.InventoryToInventoryStatus", b =>
                {
                    b.HasOne("BirdsEye.Domain.Models.Inventory", "Inventory")
                        .WithMany("InventoryToInventoryStatus")
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BirdsEye.Domain.Models.InventoryStatus", "InventoryStatus")
                        .WithMany("InventoryToInventoryStatus")
                        .HasForeignKey("InventoryStatusId");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.JobNotes", b =>
                {
                    b.HasOne("BirdsEye.Domain.Models.Job", "Job")
                        .WithMany("JobNotes")
                        .HasForeignKey("JobId");
                });

            modelBuilder.Entity("BirdsEye.Domain.Models.JobToUser", b =>
                {
                    b.HasOne("BirdsEye.Domain.Models.Job", "Job")
                        .WithMany("JobToUser")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BirdsEye.Domain.Models.User", "User")
                        .WithMany("JobToUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
